from typing import List

def checkio(data: List[int]) -> [int, float]:
    sort_data = sorted(data)
    print(sort_data)
    len_data = len(sort_data)
    #print(len_data)

    if len_data % 2 != 0:
        print(sort_data[(len_data//2)])
        return sort_data[(len_data//2)]
    else:
        print((sort_data[len_data//2] + sort_data[len_data//2 - 1])/2)
        return (sort_data[len_data//2] + sort_data[len_data//2 - 1])/2


if __name__ == '__main__':
    assert checkio([1, 2, 3, 4, 5]) == 3, "Sorted list"
    assert checkio([3, 1, 2, 5, 3]) == 3, "Not sorted list"
    assert checkio([1, 300, 2, 200, 1]) == 2, "It's not an average"
    assert checkio([3, 6, 20, 99, 10, 15]) == 12.5, "Even length"
    print("Start the long test")
    assert checkio(list(range(1000000))) == 499999.5, "Long."
    print("Coding complete? Click 'Check' to earn cool rewards!")



"""
Медиана - это числовое значение, которое делит сортированый массив чисел на большую и меньшую половины.
В сортированом массиве с нечетным числом элементов медиана - это число в середине массива.
Для массива с четным числом элементов, где нет одного элемента точно посередине,
медиана - это среднее значение двух чисел, находящихся в середине массива.
В этой задаче дан непустой массив натуральных чисел. Вам необходимо найти медиану данного массива.

Входные данные: Массив как список (list) чисел (int).
Выходные данные: Медиана как число (int, float).

Примеры:

checkio([1, 2, 3, 4, 5]) == 3
checkio([3, 1, 2, 5, 3]) == 3
checkio([1, 300, 2, 200, 1]) == 2
checkio([3, 6, 20, 99, 10, 15]) == 12.5

Как это используется: Медиана находит свое применение в статистике и теории вероятности,
и особенно важна для ассиметричного распределения.
Для примера: мы хотим узнать среднее доход населения -- 100 человек получают $100 в месяц и 10 человек получают $1,000,000.
Если мы возьмем среднее арифметическое, то получим $91,000.
Это довольно странное число, не показывающее истинного положения дел.
В этом случае медиана будет для нас более полезной величиной и покажет более правдоподобную картину. Статья на Википедии.

Предусловия:
1 < len(data) ≤ 1000
all(0 ≤ x < 10 ** 6 for x in data)
"""
