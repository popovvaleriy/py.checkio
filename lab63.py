def two_teams(sailors):
    first_ship = []
    second_ship = []
    
    for i,j in sailors.items():
        print(i) # Smith, Wesson, Coleman, Abrahams
        if 20 > j or j > 40:
            first_ship.append(i)
        else:
            second_ship.append(i)
    first_ship.sort()
    second_ship.sort()
    print(first_ship)
    print(second_ship)
    result = [first_ship,second_ship]
    print(result)
    return result
    #return [
    #    [],
    #    []
    #]

if __name__ == '__main__':
    assert two_teams({'Smith': 34, 'Wesson': 22, 'Coleman': 45, 'Abrahams': 19}) #== [['Abrahams', 'Coleman'], ['Smith', 'Wesson']]
    assert two_teams({'Fernandes': 18,'Johnson': 22,'Kale': 41,'McCortney': 54}) #== [['Fernandes', 'Kale', 'McCortney'], ['Johnson']]

"""
Приветствую тебя, искатель приключений! Ты находишься в начале опасного, но увлекательного путешествия,
в котором тебе предстоит разгадать множество загадок, обезвредить несколько ловушек, убежать от преследователей…
И все это ради того, чтобы найти один из самых ценных артефактов во Вселенной, источник бесконечной энергии - Гиперкуб.
Гиперкуб находится в самом центре замка, построенного эксцентричным лордом Эшером пару веков назад.
Так как этот человек весьма ценил уединение, он построил свое поместье на острове.
С тех пор, как он умер (при весьма загадочных обстоятельствах) и его слуги, вернувшиеся на континент,
рассказали миру о странных вещах, находящихся в замке, и странных явлениях, происходящих там,
множество исследовательских экспедиций и групп охотников за сокровищами отправились туда. Ни одна из них так и не вернулась обратно…
Удачи, приятель. Возможно, тебе повезет больше, чем другим.

___
Вам необходимо поделить всех нанятых матросов на 2 команды, согласно следующим правилам:
те, чей возраст меньше 20 лет или больше 40 - отправляются на первый корабль, все остальные - на второй.
Это позволит молодым матросам перенять опыт более старших коллег.
В качестве исходных данных вы получите словарь, где ключами будут выступать фамилии матросов, а значениями - их возраст.
После того, как все матросы будут поделены между кораблями, вам необходимо отсортировать их внутри каждого из списков в алфавитном порядке.

Входные данные: Словарь с возрастами матросов.
Выходные данные: Список с двумя корабельными командами.

Пример:

two_teams({'Smith': 34, 'Wesson': 22, 'Coleman': 45, 'Abrahams': 19}) == [['Abrahams', 'Coleman'],['Smith', 'Wesson']]

Как это используется: Для разделения объектов на несколько максимально равноценных групп.
Предусловия:
1 <= количество матросов <= 100 
"""
