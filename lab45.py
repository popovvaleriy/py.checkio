def checkio(number):
    result = bin(number)
    print(result[2:])
    result2 = result[2:]
    print(result2.count('1'))
    return result2.count('1')


if __name__ == '__main__':
    assert checkio(4) == 1
    assert checkio(15) == 4
    assert checkio(1) == 1
    assert checkio(1022) == 9

"""
Для Роботов десятичная форма чисел неудобна. Если вы попросите сосчитать сколько единиц (1) в числе,
то их компьютерные мозги будут пытатся считать в двоичном представлении. Узнать больше о двоичных числах можно здесь.

Дано положительное целое число. Вам необходимо сконвертировать его в двоичную форму и
подсчитать сколько единиц в написании данного числа. Для примера: 5 = 0b101 содержит две единицы, так что ответ 2.

Заметки: Эта задача легко решается с помощью двух функций" -- bin и count.

Вх. данные: Число как положительное целочисленное (int).
Вых. данные: Число единиц в двоичной форме данного числа (int).

Примеры:
checkio(4) == 1
checkio(15) == 4
checkio(1) == 1
checkio(1022) == 9

Как это используется: Здесь вы попрактикуетесь как конвертировать число в двоичную форму.
Это очень полезный навык в области вычислительной техники.

Предусловия: 0 < number ≤ 232
"""
